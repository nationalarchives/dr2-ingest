name: Deploy DR2 Ingest Lambdas
on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: 'Environment'
        required: true
        options:
          - intg
          - staging
          - prod
        default: 'intg'
      to-deploy:
        description: 'Version to deploy'
        required: true

permissions:
  id-token: write
  contents: write
jobs:
  terraform_plan:
    runs-on: ubuntu-latest
    outputs:
      changes: ${{ steps.detect_changes.outputs.changes }}
    environment: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
        with:
          submodules: recursive
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - uses: hashicorp/setup-terraform@982f6f017c89db9dccac8593265de0c382e4c050
        with:
          terraform_wrapper: false
      - id: role-name
        run: echo role-name="$(echo ${{ github.event.inputs.environment }} | sed -r 's/(^|-)(\w)/\U\2/g')TerraformRole" >> $GITHUB_OUTPUT
      - uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_NUMBER }}:role/${{ steps.role-name.outputs.role-name }}
          aws-region: eu-west-2
          role-session-name: TerraformDeploy
      - run: pip install boto3
      - name: run_plan
        working-directory: terraform
        run: |
          terraform init
          terraform workspace select ${{ github.event.inputs.environment }}
          terraform plan -detailed-exitcode || echo $? > exit-code
      - id: detect_changes
        run: |
          EXITCODE=$(cat exit-code || echo 0)
          if [ "$EXITCODE" = "2" ]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            python ../.github/scripts/send_message.py
          else
            echo "changes=false" >> $GITHUB_OUTPUT
          fi
        working-directory: terraform
        env:
          MESSAGE: |
            :book: Terraform plan ready for environment ${{ github.event.inputs.environment }}
            :white_check_mark: <https://github.com/nationalarchives/dr2-ingest/actions/runs/${{ github.run_id }}|Approve the workflow>
  terraform_apply:
    needs: terraform_plan
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    if: needs.terraform_plan.outputs.changes == 'true'
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
        with:
          submodules: recursive
          token: ${{ secrets.WORKFLOW_TOKEN }}
      - uses: hashicorp/setup-terraform@982f6f017c89db9dccac8593265de0c382e4c050
      - id: role-name
        run: echo role-name="$(echo ${{ github.event.inputs.environment }} | sed -r 's/(^|-)(\w)/\U\2/g')TerraformRole" >> $GITHUB_OUTPUT
      - uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_NUMBER }}:role/${{ steps.role-name.outputs.role-name }}
          aws-region: eu-west-2
          role-session-name: TerraformDeploy
      - run: pip install boto3
      - run: |
          terraform init
          terraform workspace select ${{ github.event.inputs.environment }}
          terraform apply --auto-approve
          python ../.github/scripts/send_message.py
        working-directory: terraform
        env:
          MESSAGE: ":white_check_mark: terraform deploy successful for ${{ github.event.inputs.environment }}"
      - run: |
          git branch -f release-${{ github.event.inputs.environment }} HEAD
          git push -f origin release-${{ github.event.inputs.environment }}
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment }}
    steps:
      - uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
      - id: role-name
        run: echo role-name="$(echo ${{ github.event.inputs.environment }} | sed -r 's/(^|-)(\w)/\U\2/g')DPGithubActionsDeployLambdaRole" >> $GITHUB_OUTPUT
      - name: Configure AWS credentials for Lambda
        uses: aws-actions/configure-aws-credentials@00943011d9042930efac3dcd3a170e4273319bc8 # v5.1.0
        with:
          role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_NUMBER }}:role/${{ steps.role-name.outputs.role-name }}
          aws-region: eu-west-2
          role-session-name: ECRLogin
      - run: | 
          pip install boto3
          git branch -f release-${{ github.event.inputs.environment }} HEAD
          git push -f origin release-${{ github.event.inputs.environment }}
          python .github/scripts/deploy.py ${{ github.event.inputs.environment }} ${{ github.event.inputs.to-deploy }}
